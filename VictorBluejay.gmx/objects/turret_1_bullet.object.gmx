<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>bullet1</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
spawnTower = instance_nearest(x,y,turret_1);
move_towards_point(spawnTower.target.x, spawnTower.target.y,15)
//squirrel_bonus_x = 0; //100;
//squirrel_bonus_y = 0; //100;

look_ahead_amount = 30;

turret_bullet_speed_hi = 15;
/*if (spawnTower.target.direction == 0){
    squirrel_bonus_x = look_ahead_amount;
}
if (spawnTower.target.direction == 90){
    squirrel_bonus_y = -look_ahead_amount;
}
if (spawnTower.target.direction == 180){
    squirrel_bonus_x = -look_ahead_amount;
}
if (spawnTower.target.direction == 270){
    squirrel_bonus_y = look_ahead_amount;
}


image_angle = point_direction(x, y, spawnTower.target.x, spawnTower.target.y);
//image_angle = point_direction(x, y, spawnTower.target.x + squirrel_bonus_x, spawnTower.target.y + squirrel_bonus_y);
// calculate direction vector towards target
turret_diffX = (spawnTower.target.x + squirrel_bonus_x) - x;
turret_diffY = (spawnTower.target.y + squirrel_bonus_y) - y;
// normalize direction vector
turret_magn = sqrt((turret_diffX * turret_diffX) + (turret_diffY * turret_diffY));
turret_diffX = turret_diffX / turret_magn;
turret_diffY = turret_diffY / turret_magn;
// set speed
hspeed = turret_diffX * turret_bullet_speed_hi;
vspeed = turret_diffY * turret_bullet_speed_hi;
*/
//hspeed = bullet_speed_hi*cos(image_angle);
//vspeed = bullet_speed_hi*sin(image_angle);
//show_message(image_angle);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
